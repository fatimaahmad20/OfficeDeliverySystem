@model deliverySystem.Models.Register
@{
    ViewBag.Title = "Register";
}
<link href="~/Content/btn.css" rel="stylesheet" />
<h2>Register</h2>

@if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
{
    if (ViewBag.Message != null)
    {
        <div class="alert alert-success">
            <strong>Success!</strong> @ViewBag.Message
        </div>
    }
}
else
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.User.Role, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(u => u.User.Role,
                         new SelectList(Enum.GetValues(typeof(deliverySystem.Models.Role))),
                         "Select Role",
                         new { @class = "form-control", @id = "roleDiv",
                             @onchange = "ShowHideDiv()"})
            @Html.ValidationMessageFor(model => model.User.Role, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.User.FirstName, "First Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.User.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.User.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.User.LastName, "Last Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.User.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.User.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.User.Birthdate, "Birthdate", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.User.Birthdate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.User.Birthdate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.User.Department, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(u => u.SelectedDepartmentId,
                         new SelectList(Model.Departments, "Id", "Name"),
                         "Select Department",
                         new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SelectedDepartmentId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.User.Block, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.User.Block, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.User.Block, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.User.Floor, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.User.Floor, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.User.Floor, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.User.Office, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.User.Office, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.User.Office, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.User.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.User.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.User.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.User.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.User.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.User.Password, "", new { @class = "text-danger" })
        </div>
    </div>
        
    <div id="categoryDiv" style="display:none;" class="form-group">
        @Html.LabelFor(model => model.User.Category, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(u => u.User.Category,
                         new SelectList(Enum.GetValues(typeof(deliverySystem.Models.Category))),
                         "Select Category",
                         new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.User.Category, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Register" class="btn btn-primary btn-xl" />
        </div>
    </div>
</div>

        if (ViewBag.Message != null)
        {
            <div class="alert alert-danger">
                <strong>Error!</strong> @ViewBag.Message
            </div>
        }

    }
}


<div>
    @Html.ActionLink("Login", "Login")
</div>

<script type="text/javascript">
    function ShowHideDiv() {
        if ($('#roleDiv').val() == "DeliveryMan")
        {
            $('#categoryDiv').show();
        } else {
            $('#categoryDiv').hide();
        }
    }
</script>